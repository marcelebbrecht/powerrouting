<?xml version="1.0" encoding="UTF-8"?>
<scave:Analysis xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:scave="http://www.omnetpp.org/omnetpp/scave">
  <inputs>
    <inputs name="../results/DYMO-*.vec"/>
    <inputs name="../results/DYMO-*.sca"/>
    <inputs name="../results/DYMOPO-*.vec"/>
    <inputs name="../results/DYMOPO-*.sca"/>
    <inputs name="../results/DYMOPOT*.vec"/>
    <inputs name="../results/DYMOPOT*.sca"/>
    <inputs name="../results/DYMOPOM*.vec"/>
    <inputs name="../results/DYMOPOM*.sca"/>
    <inputs name="../results/DYMOPOL*.vec"/>
    <inputs name="../results/DYMOPOL*.sca"/>
  </inputs>
  <datasets>
    <datasets name="DYMO-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMO)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMO.${router}.energyStorage" groupByExpr="(module =~ DYMO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMO-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMO-Capacity"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMO-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMO-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOPO-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOPO)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMOPO.${router}.energyStorage" groupByExpr="(module =~ DYMOPO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOPO-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOPO-Capacity-OverTime"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOPO-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOPO-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOPOTriggerHappy-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOPOTriggerHappy)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMOPO.${router}.energyStorage" groupByExpr="(module =~ DYMOPO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOPOTriggerHappy-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOPOTriggerHappy-Capacity-OverTime"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOPOTriggerHappy-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOPOTriggerHappy-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOPOTriggerSloppy-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOPOTriggerSloppy)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMOPO.${router}.energyStorage" groupByExpr="(module =~ DYMOPO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOPOTriggerSloppy-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOPOTriggerSloppy-Capacity-OverTime"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOPOTriggerSloppy-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOPOTriggerSloppy-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOLong-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOLong)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMO.${router}.energyStorage" groupByExpr="(module =~ DYMO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOLong-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOLong-Capacity"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOLong-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOLong-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOPOLong-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOPOLong)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMOPO.${router}.energyStorage" groupByExpr="(module =~ DYMOPO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOPOLong-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOPOLong-Capacity-OverTime"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOPOLong-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOPOLong-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOPOLongTriggerHappy-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOPOLongTriggerHappy)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMOPO.${router}.energyStorage" groupByExpr="(module =~ DYMOPO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOPOLongTriggerHappy-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOPOLongTriggerHappy-Capacity-OverTime"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOPOLongTriggerHappy-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOPOLongTriggerHappy-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMOPOLongTriggerSloppy-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND attr:configname(DYMOPOLongTriggerSloppy)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="DYMOPO.${router}.energyStorage" groupByExpr="(module =~ DYMOPO.${router=*}.** ) ? router : 0"/>
      <items xsi:type="scave:LineChart" name="DYMOPOLongTriggerSloppy-Capacity-OverTime" lineNameFormat="">
        <properties name="Graph.Title" value="DYMOPOLongTriggerSloppy-Capacity-OverTime"/>
        <properties name="X.Axis.Title" value="time"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Display" value="true"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
      <items xsi:type="scave:BarChart" name="DYMOPOLongTriggerSloppy-Capacity-AtEnd">
        <properties name="Graph.Title" value="DYMOPOLongTriggerSloppy-Capacity-AtEnd"/>
        <properties name="X.Axis.Title" value="storage"/>
        <properties name="Y.Axis.Title" value="capacity"/>
        <properties name="Legend.Position" value="Right"/>
      </items>
    </datasets>
    <datasets name="DYMO-Comparision-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND ( attr:configname(DYMOPOTriggerHappy) OR attr:configname(DYMOPOTriggerSloppy) OR attr:configname(DYMOPO) OR attr:configname(DYMO) )" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:Group" name="DYMO-Comparision-Capacity-Sum">
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="${experiment}.${router}.energyStorage" groupByExpr="(module =~ ${experiment=*}.${router=*}.** ) ? router : 0"/>
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacitySum" valueExpr="sum(remainingCapacity)" moduleExpr="${experiment}.Overall.energyStorage" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="module(*router*)"/>
        <items xsi:type="scave:BarChart" name="DYMO-Comparision-Capacity-Sum">
          <properties name="Graph.Title" value="DYMO-Comparision-Capacity-Sum"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="capacity"/>
        </items>
      </items>
      <items xsi:type="scave:Group" name="DYMO-Comparision-Capacity-Stddev">
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="${experiment}.${router}.energyStorage" groupByExpr="(module =~ ${experiment=*}.${router=*}.** ) ? router : 0"/>
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacityStddev" valueExpr="stddev(remainingCapacity)" moduleExpr="${experiment}.Overall.energyStorage" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="module(*router*)"/>
        <items xsi:type="scave:BarChart" name="DYMO-Comparision-Capacity-Stddev">
          <properties name="Graph.Title" value="DYMO-Comparision-Capacity-Stddev"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="stddev"/>
        </items>
      </items>
    </datasets>
    <datasets name="DYMOLong-Comparision-Capacity">
      <items xsi:type="scave:Add" filterPattern="name(*Capacity*) AND ( attr:configname(*Long*) )" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*sender*)" type="VECTOR"/>
      <items xsi:type="scave:Discard" filterPattern="module(*receiver*)" type="VECTOR"/>
      <items xsi:type="scave:Group" name="DYMOLong-Comparision-Capacity-Sum">
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="${experiment}.${router}.energyStorage" groupByExpr="(module =~ ${experiment=*}.${router=*}.** ) ? router : 0"/>
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacitySum" valueExpr="sum(remainingCapacity)" moduleExpr="${experiment}.Overall.energyStorage" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="module(*router*)"/>
        <items xsi:type="scave:BarChart" name="DYMOLong-Comparision-Capacity-Sum">
          <properties name="Graph.Title" value="DYMOLong-Comparision-Capacity-Sum"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="capacity"/>
        </items>
      </items>
      <items xsi:type="scave:Group" name="DYMOLong-Comparision-Capacity-Stddev">
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacity" valueExpr="min('residualEnergyCapacity:vector')" moduleExpr="${experiment}.${router}.energyStorage" groupByExpr="(module =~ ${experiment=*}.${router=*}.** ) ? router : 0"/>
        <items xsi:type="scave:ComputeScalar" scalarName="remainingCapacityStddev" valueExpr="stddev(remainingCapacity)" moduleExpr="${experiment}.Overall.energyStorage" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="module(*router*)"/>
        <items xsi:type="scave:BarChart" name="DYMOLong-Comparision-Capacity-Stddev">
          <properties name="Graph.Title" value="DYMOLong-Comparision-Capacity-Stddev"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="stddev"/>
        </items>
      </items>
    </datasets>
    <datasets name="DYMO-Comparision-UDP">
      <items xsi:type="scave:Group" name="DYMO-Comparision-UDP-Packets">
        <items xsi:type="scave:Add" filterPattern="module(&quot;*receiver*udpApp[0]*&quot;)  AND ( attr:configname(DYMOPOTriggerHappy) OR attr:configname(DYMOPOTriggerSloppy) OR attr:configname(DYMOPO) OR attr:configname(DYMO) ) AND name(rcvdPk:count)"/>
        <items xsi:type="scave:BarChart" name="DYMO-Comparision-UDP-Packets">
          <properties name="Graph.Title" value="DYMO-Comparision-UDP-Packets"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="packets"/>
        </items>
      </items>
      <items xsi:type="scave:Group" name="DYMO-Comparision-UDP-LossRate">
        <items xsi:type="scave:Add" filterPattern="module(&quot;*receiver*udpApp[0]*&quot;)  AND ( attr:configname(DYMOPOTriggerHappy) OR attr:configname(DYMOPOTriggerSloppy) OR attr:configname(DYMOPO) OR attr:configname(DYMO) ) AND name(rcvdPk:count)"/>
        <items xsi:type="scave:Add" filterPattern="module(&quot;*sender*udpApp[0]*&quot;)  AND ( attr:configname(DYMOPOTriggerHappy) OR attr:configname(DYMOPOTriggerSloppy) OR attr:configname(DYMOPO) OR attr:configname(DYMO) ) AND name(sentPk:count)"/>
        <items xsi:type="scave:ComputeScalar" scalarName="packetLoss" valueExpr="( 1 - max('rcvdPk:count') / max('sentPk:count') ) * 100" moduleExpr="${experiment}.Overall.udpApp[0]" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="name(*count*)"/>
        <items xsi:type="scave:BarChart" name="DYMO-Comparision-UDP-LossRate">
          <properties name="Graph.Title" value="DYMO-Comparision-UDP-LossRate"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="percent"/>
        </items>
      </items>
    </datasets>
    <datasets name="DYMOLong-Comparision-UDP">
      <items xsi:type="scave:Group" name="DYMOLong-Comparision-UDP-Packets">
        <items xsi:type="scave:Add" filterPattern="module(&quot;*receiver*udpApp[0]*&quot;) AND attr:configname(*Long*) AND name(rcvdPk:count) AND attr:configname(*DYMO*)"/>
        <items xsi:type="scave:ComputeScalar" scalarName="packets" valueExpr="sum('rcvdPk:count')" moduleExpr="${experiment}.Overall.udpApp[0]" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="name(*count*)"/>
        <items xsi:type="scave:BarChart" name="DYMOLong-Comparision-UDP-Packets">
          <properties name="Graph.Title" value="DYMOLong-Comparision-UDP-Packets"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="packets"/>
        </items>
      </items>
      <items xsi:type="scave:Group" name="DYMOLong-Comparision-UDP-LossRate">
        <items xsi:type="scave:Add" filterPattern="module(&quot;*receiver*udpApp[0]*&quot;) AND attr:configname(*Long*) AND name(rcvdPk:count) AND attr:configname(*DYMO*)"/>
        <items xsi:type="scave:Add" filterPattern="module(&quot;*sender*udpApp[0]*&quot;) AND attr:configname(*Long*) AND name(sentPk:count) AND attr:configname(*DYMO*)"/>
        <items xsi:type="scave:ComputeScalar" scalarName="packetLoss" valueExpr="( 1 - sum('rcvdPk:count') / sum('sentPk:count') ) * 100" moduleExpr="${experiment}.Overall.udpApp[0]" groupByExpr="(module =~ ${experiment=*}.** ) ? experiment: 0"/>
        <items xsi:type="scave:Discard" filterPattern="name(*count*)"/>
        <items xsi:type="scave:BarChart" name="DYMOLong-Comparision-UDP-LossRate">
          <properties name="Graph.Title" value="DYMOLong-Comparision-UDP-LossRate"/>
          <properties name="X.Axis.Title" value="configuration"/>
          <properties name="Y.Axis.Title" value="percent"/>
        </items>
      </items>
    </datasets>
  </datasets>
  <chartSheets>
    <chartSheets name="default"/>
    <chartSheets name="Capacity Over-Time" charts="//@datasets/@datasets.0/@items.4 //@datasets/@datasets.1/@items.4 //@datasets/@datasets.2/@items.4 //@datasets/@datasets.3/@items.4"/>
    <chartSheets name="Capacity Over-Time Long" charts="//@datasets/@datasets.4/@items.4 //@datasets/@datasets.5/@items.4 //@datasets/@datasets.6/@items.4 //@datasets/@datasets.7/@items.4"/>
    <chartSheets name="Capacity At-End" charts="//@datasets/@datasets.1/@items.5 //@datasets/@datasets.2/@items.5 //@datasets/@datasets.3/@items.5 //@datasets/@datasets.0/@items.5"/>
    <chartSheets name="Capacity At-End Long" charts="//@datasets/@datasets.4/@items.5 //@datasets/@datasets.5/@items.5 //@datasets/@datasets.6/@items.5 //@datasets/@datasets.7/@items.5"/>
    <chartSheets name="UDP Comparision" charts="//@datasets/@datasets.10/@items.1/@items.4 //@datasets/@datasets.10/@items.0/@items.1"/>
    <chartSheets name="UDP Comparision Long" charts="//@datasets/@datasets.11/@items.1/@items.4 //@datasets/@datasets.11/@items.0/@items.3"/>
    <chartSheets name="Capacity Deviation" charts="//@datasets/@datasets.8/@items.4/@items.3"/>
  </chartSheets>
</scave:Analysis>
