# PowerRouting for OMNeT++ - common settings
# Marcel Ebbrecht, marcel.ebbrecht@googlemail.com
# free software, see LICENSE.md for details

[General]
description = general settings for all scenarios, not runnable
network = AODV

# misc settings
record-eventlog = false
**.cmdenv-log-level = info
cmdenv-express-mode = true
sim-time-limit = 60s
repeat = 100

# lifecycle
**.hasStatus = true

# energy storage
**.router*.energyStorageType = "SimpleEpEnergyStorage"
**.router*.energyStorage*.nominalCapacity = 0.075J
**.router*.energyManagementType = "SimpleEpEnergyManagement"
**.router*.energyManagement*.nodeShutdownCapacity = 0.001J
**.router*.energyManagement*.nodeStartCapacity = 0.0025J
**.sender*.energyStorageType = "IdealEpEnergyStorage"
**.receiver*.energyStorageType = "IdealEpEnergyStorage"
**.displayEnergyStorages = true

# channel physical parameters
**.wlan[*].typename = "WirelessNic"
#**.wlan[*].mgmt.frameCapacity = 0
**.wlan[*].macType = "CsmaCaMac"
#**.wlan[*].mac.retryLimit = 3
#**.wlan[*].mac.maxQueueSize = 10
**.wlan[*].radioType = "IdealRadio"
**.wlan[*].radio.transmitter.communicationRange = 250m
**.wlan[*].radio.transmitter.interferenceRange = 350m
**.bitrate = 11Mbps

# visualizer
#*.visualizer.physicalLinkVisualizer.packetFilter = "*udp*"
#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.dataLinkVisualizer.displayLinks = true
#*.visualizer.dataLinkVisualizer.packetFilter = "*udp*"
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.packetFilter = "*UDPData*"

[Config EnergyUsage]
description = Energy consumption settings, not runnable

# power settings experiment
**.wlan[*].radio.energyConsumerType = "StateBasedEpEnergyConsumer"
**.wlan[*].radio.energyConsumer.offPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.receiverBusyPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.receiverIdlePowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.receiverReceivingDataPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.receiverReceivingHeaderPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.receiverReceivingPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.receiverReceivingPreamblePowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.sleepPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.switchingPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.transmitterIdlePowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.transmitterTransmittingDataPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.transmitterTransmittingHeaderPowerConsumption = 0mW
**.wlan[*].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW
**.wlan[*].radio.energyConsumer.transmitterTransmittingPreamblePowerConsumption = 0mW

[Config Longterm]
description = longterm time settings, not runnable

# time settings
sim-time-limit = 300s

[Config UDPSenderOne]
description = udp sender one, not runnable

# udp sender one
**.sender1.numUdpApps = 1
**.sender1.udpApp[0].typename = "UDPBasicApp"
**.sender1.udpApp[0].destAddresses = "receiver1(ipv4)"
**.sender1.udpApp[0].destPort = 5000
**.sender1.udpApp[0].messageLength = 1000B
**.sender1.udpApp[0].sendInterval = exponential(50ms)
**.sender1.udpApp[0].packetName = "UDPData"
**.sender1.udpApp[0].startTime = 10s

**.receiver1.numUdpApps = 1
**.receiver1.udpApp[0].typename = "UDPSink"
**.receiver1.udpApp[0].localPort = 5000

[Config UDPSenderOneToMany]
description = udp sender one, random destination, not runnable

# random stuff
seed-0-mt = 5
num-rngs = 2

# disable visualizer
*.visualizer.networkRouteVisualizer.displayRoutes = false

# udp sink for all
**.router*.numUdpApps = 2
**.router*.udpApp[0].typename = "UDPSink"
**.router*.udpApp[0].localPort = 5000

# real udp senders
**.router13.udpApp[1].typename = "UDPBasicBurst"
**.router13.udpApp[1].destAddresses = moduleListByPath("**.router*")
**.router13.udpApp[1].destPort = 5000
**.router13.udpApp[1].localPort = 5001
**.router13.udpApp[1].messageLength = 1000B
**.router13.udpApp[1].sendInterval = exponential(20ms)
**.router13.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router13.udpApp[1].sleepDuration = 0s
**.router13.udpApp[1].chooseDestAddrMode = "perSend"
**.router13.udpApp[1].startTime = 10s
**.router13.udpApp[1].delayLimit = 0.05s
**.router13.udpApp[1].destAddrRNG = 1
**.router13.energyStorage*.nominalCapacity = 0.500J

# fake udp senders
**.router*.udpApp[1].typename = "UDPBasicBurst"
**.router*.udpApp[1].destAddresses = moduleListByPath("**.router*")
**.router*.udpApp[1].destPort = 5000
**.router*.udpApp[1].localPort = 5001
**.router*.udpApp[1].messageLength = 1000B
**.router*.udpApp[1].sendInterval = exponential(20ms)
**.router*.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router*.udpApp[1].sleepDuration = 0s
**.router*.udpApp[1].chooseDestAddrMode = "perSend"
**.router*.udpApp[1].startTime = 999999s
**.router*.udpApp[1].delayLimit = 0.05s
**.router*.udpApp[1].destAddrRNG = 1
**.router*.energyStorage*.nominalCapacity = 0.500J

[Config UDPSenderOneToOne]
description = udp sender one, single destination, not runnable

# random stuff
seed-0-mt = 5
num-rngs = 2

# disable visualizer
*.visualizer.networkRouteVisualizer.displayRoutes = false

# udp sink for all
**.router*.numUdpApps = 2
**.router*.udpApp[0].typename = "UDPSink"
**.router*.udpApp[0].localPort = 5000

# real udp senders
**.router13.udpApp[1].typename = "UDPBasicBurst"
**.router13.udpApp[1].destAddresses = "router53(ipv4)"
**.router13.udpApp[1].destPort = 5000
**.router13.udpApp[1].localPort = 5001
**.router13.udpApp[1].messageLength = 1000B
**.router13.udpApp[1].sendInterval = exponential(20ms)
**.router13.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router13.udpApp[1].sleepDuration = 0s
**.router13.udpApp[1].chooseDestAddrMode = "perSend"
**.router13.udpApp[1].startTime = 10s
**.router13.udpApp[1].delayLimit = 0.05s
**.router13.udpApp[1].destAddrRNG = 1
**.router13.energyStorage*.nominalCapacity = 0.500J

# fake udp senders
**.router*.udpApp[1].typename = "UDPBasicBurst"
**.router*.udpApp[1].destAddresses = "router53(ipv4)"
**.router*.udpApp[1].destPort = 5000
**.router*.udpApp[1].localPort = 5001
**.router*.udpApp[1].messageLength = 1000B
**.router*.udpApp[1].sendInterval = exponential(20ms)
**.router*.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router*.udpApp[1].sleepDuration = 0s
**.router*.udpApp[1].chooseDestAddrMode = "perSend"
**.router*.udpApp[1].startTime = 999999s
**.router*.udpApp[1].delayLimit = 0.05s
**.router*.udpApp[1].destAddrRNG = 1
**.router*.energyStorage*.nominalCapacity = 0.500J

[Config UDPSenderManyToMany]
description = udp sender all, random destination, not runnable

# random stuff
seed-0-mt = 5
num-rngs = 2

# disable visualizer
*.visualizer.networkRouteVisualizer.displayRoutes = false

# udp sink for all
**.router*.numUdpApps = 2
**.router*.udpApp[0].typename = "UDPSink"
**.router*.udpApp[0].localPort = 5000

# real udp senders
**.router*.udpApp[1].typename = "UDPBasicBurst"
**.router*.udpApp[1].destAddresses = moduleListByPath("**.router*")
**.router*.udpApp[1].destPort = 5000
**.router*.udpApp[1].localPort = 5001
**.router*.udpApp[1].messageLength = 1000B
**.router*.udpApp[1].sendInterval = exponential(20ms)
**.router*.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router*.udpApp[1].sleepDuration = 0s
**.router*.udpApp[1].chooseDestAddrMode = "perSend"
**.router*.udpApp[1].startTime = 10s
**.router*.udpApp[1].delayLimit = 0.05s
**.router*.udpApp[1].destAddrRNG = 1
**.router*.energyStorage*.nominalCapacity = 1.000J

[Config UDPSenderManyToOne]
description = udp sender all, single destination, not runnable

# random stuff
seed-0-mt = 5
num-rngs = 2

# disable visualizer
*.visualizer.networkRouteVisualizer.displayRoutes = false

# udp sink for all
**.router*.numUdpApps = 2
**.router*.udpApp[0].typename = "UDPSink"
**.router*.udpApp[0].localPort = 5000

# real udp senders
**.router53.udpApp[1].typename = "UDPBasicBurst"
**.router53.udpApp[1].destAddresses = "router53(ipv4)"
**.router53.udpApp[1].destPort = 5000
**.router53.udpApp[1].localPort = 5001
**.router53.udpApp[1].messageLength = 1000B
**.router53.udpApp[1].sendInterval = exponential(20ms)
**.router53.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router53.udpApp[1].sleepDuration = 0s
**.router53.udpApp[1].chooseDestAddrMode = "perSend"
**.router53.udpApp[1].startTime = 999999s
**.router53.udpApp[1].delayLimit = 0.05s
**.router53.udpApp[1].destAddrRNG = 1
**.router53.energyStorage*.nominalCapacity = 1.000J

# fake udp senders
**.router*.udpApp[1].typename = "UDPBasicBurst"
**.router*.udpApp[1].destAddresses = "router53(ipv4)"
**.router*.udpApp[1].destPort = 5000
**.router*.udpApp[1].localPort = 5001
**.router*.udpApp[1].messageLength = 1000B
**.router*.udpApp[1].sendInterval = exponential(20ms)
**.router*.udpApp[1].burstDuration = 0s #uniform(1s,4s,1)
**.router*.udpApp[1].sleepDuration = 0s
**.router*.udpApp[1].chooseDestAddrMode = "perSend"
**.router*.udpApp[1].startTime = 10s
**.router*.udpApp[1].delayLimit = 0.05s
**.router*.udpApp[1].destAddrRNG = 1
**.router*.energyStorage*.nominalCapacity = 1.000J

[Config MixedPowerSettings]
description = set ideal storage for aodv hosts, not runnable

# power settings
**.router22.energyStorageType = "IdealEpEnergyStorage"
**.router23.energyStorageType = "IdealEpEnergyStorage"
**.router24.energyStorageType = "IdealEpEnergyStorage"
**.router42.energyStorageType = "IdealEpEnergyStorage"
**.router43.energyStorageType = "IdealEpEnergyStorage"
**.router44.energyStorageType = "IdealEpEnergyStorage"

